public class Usuario {
    private String nome;
    private String email;

    public Usuario(String nome, String email) {
        this.nome = nome;
        this.email = email;
    }

    public String getNome() {
        return nome;
    }

    public String getEmail() {
        return email;
    }

    @Override
    public String toString() {
        return "Nome: " + nome + ", Email: " + email;
    }
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////



package com.cassino.biblioteca;

import java.math.BigDecimal;

public class ContaBancaria {
    private Long idUsuario;
    private BigDecimal saldo;

    public ContaBancaria(Long idUsuario) {
        this.idUsuario = idUsuario;
        this.saldo = BigDecimal.ZERO;
    }

    public Long getIdUsuario() {
        return idUsuario;
    }

    public BigDecimal getSaldo() {
        return saldo;
    }

    public void depositar(BigDecimal valor) {
        if (valor.compareTo(BigDecimal.ZERO) <= 0) {
            throw new IllegalArgumentException("O valor do depÃ³sito deve ser positivo.");
        }
        saldo = saldo.add(valor);
    }

    public void sacar(BigDecimal valor) {
        if (valor.compareTo(BigDecimal.ZERO) <= 0) {
            throw new IllegalArgumentException("O valor do saque deve ser positivo.");
        }
        if (saldo.compareTo(valor) < 0) {
            throw new IllegalArgumentException("Saldo insuficiente.");
        }
        saldo = saldo.subtract(valor);
    }

    @Override
    public String toString() {
        return "ContaBancaria{" +
                "idUsuario=" + idUsuario +
                ", saldo=" + saldo +
                '}';
    }
}
